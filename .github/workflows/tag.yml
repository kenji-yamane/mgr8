name: Tag

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    name: Build & Test

    steps:
      - uses: actions/checkout@v2
        with:
          go-version: '1.17.6'

      - name: Build
        run: make build

      - name: Run tests
        run: make test

      - name: Upload coverage reports to Codecov with GitHub Action
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov &&
          chmod +x codecov &&
          ./codecov -t ${CODECOV_TOKEN}

  tag:
    runs-on: ubuntu-latest
    needs: build-and-test
    name: Generate & Push Tag

    outputs:
      tag: ${{ steps.tag_generator.outputs.version_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate tag
        id: tag_generator
        uses: paulhatch/semantic-version@v4.0.2
        with:
          tag_prefix: 'v'
          major_pattern: '(MAJOR)'
          minor_pattern: '(MINOR)'
          format: '${major}.${minor}.${patch}'
          short_tags: false
          bump_each_commit: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tag to github
        run: |
          git tag ${{ steps.tag_generator.outputs.version_tag }}
          git push origin --tags

  release:
    runs-on: ubuntu-latest
    needs: tag
    name: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.17.6'

      - name: Set up release environment
        run: |-
          echo 'GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}' >> .release-env

      - name: Run GoReleaser
        run: make release

  deploy-docker:
    runs-on: ubuntu-latest
    needs: tag
    name: Deploy to DockerHub

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TAG_LATEST_RELEASE: '${{ secrets.DOCKER_USER }}/mgr8:latest'
      DOCKER_TAG_RELEASE: '${{ secrets.DOCKER_USER }}/mgr8:${{ needs.tag.outputs.tag }}'

    steps:
      - uses: actions/checkout@v2

      - name: Docker login
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build Docker image
        run: |
          docker build . --file Dockerfile --tag $DOCKER_TAG_LATEST_RELEASE $DOCKER_TAG_RELEASE

      - name: Push to DockerHub
        run: |
          docker push $DOCKER_TAG_RELEASE &&
          docker push $DOCKER_TAG_LATEST_RELEASE
